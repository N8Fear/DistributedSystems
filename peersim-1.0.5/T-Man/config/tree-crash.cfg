#random.seed 1234567891
simulation.endtime CYCLES*CYCLELENGTH
simulation.logtime CYCLELENGTH

simulation.experiments 50

range.0 CRASH;0.000,0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010
range.1 K;10,13,16

CYCLES 100
CYCLELENGTH 1000
DEGREE 5
MSGSIZE 20
TABUSIZE 4
INACTIVE 4
CAPACITY 128
INIT 20
SIZE 2^K-1

network.size SIZE
network.node peersim.core.GeneralNode

protocol.rumor EpidemicRumor
{
  linkable sample
  pushpull
}

protocol.ring XTMan
{
  degree DEGREE
  msgsize MSGSIZE
  tabu TABUSIZE
  capacity CAPACITY
  distance TreeDistance
  distance.protocol ring
  distance.bits K+1
  infectable rumor
  inactive INACTIVE*CYCLELENGTH
}

protocol.xtman EDEpidemicManager
{
  protocol ring,rumor
  transport transport
  period CYCLELENGTH
}

protocol.sample IdleProtocol
{
  capacity INIT
}

protocol.transport E2ETransport


init.id peersim.vector.LinearDistribution
{
  protocol ring
  min 1
  max 2^K-1
  setter setID
}

init.random peersim.dynamics.WireKOut
{
  protocol ring
  k INIT
  pack
}

init.idle peersim.dynamics.WireKOut
{
  protocol sample
  k INIT
}

init.start StartInfection
{
  infectable rumor
}

init.king KingParser
{
  ratio 0.001
}

init.router UniformRouterAssignment
{
  protocol transport
}

control.crash DynamicNetwork
{
  add -CRASH*SIZE
  step CYCLELENGTH
}

control.ring TreeObserver
{
  protocol ring
  from 0
  step CYCLELENGTH
#  stop
}

simulation.timed-observers active,degree

order.control ring,degree,active

control.degree peersim.reports.DegreeStats
{
  protocol ring
  directed
  step CYCLELENGTH
}

control.active VectorObserver
{
  protocol ring
  getter isActive
  step CYCLELENGTH
  from CYCLELENGTH
  endvalue 0.0
}